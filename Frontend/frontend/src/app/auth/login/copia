<div class="login-container">
  <div class="login-card">
    <h2>Register</h2>
    
    <form (ngSubmit)="onSubmit()">
      <div class="form-group">
        <input 
          type="text"
          placeholder="Username"
          [(ngModel)]="username"
          name="username"
          class="form-input"
          [disabled]="isLoading"
        >
      </div>
      
      <div class="form-group">
        <input 
          type="password"
          placeholder="Password"
          [(ngModel)]="password"
          name="password"
          class="form-input"
          [disabled]="isLoading"
        >
      </div>
      
      <div class="form-group">
        <input 
          type="email"
          placeholder="Email"
          [(ngModel)]="email"
          name="email"
          class="form-input"
          [disabled]="isLoading"
        >
      </div>
      
      <div class="error-message" *ngIf="errorMessage">
        {{ errorMessage }}
      </div>
      
      <button 
        type="submit"
        class="btn-primary"
        [disabled]="isLoading"
      >
        <span *ngIf="isLoading" class="loading-spinner"></span>
        {{ isLoading ? 'Registering...' : 'Register' }}
      </button>
    </form>
    
    <div class="form-footer">
      <p>Already have an account? 
        <button type="button" class="btn-link" (click)="goToLogin()">
          Sign in
        </button>
      </p>
    </div>
  </div>
</div>,


import { Component } from '@angular/core';
import { AuthService } from '../auth.service';
import { Router } from '@angular/router';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-register',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './register.component.html',
  styleUrls: ['./register.component.scss']
})
export class RegisterComponent {
  username = '';
  password = '';
  email = '';
  errorMessage = '';
  isLoading = false;

  constructor(
    private authService: AuthService,
    private router: Router
  ) {}

  onSubmit(): void {
    if (!this.username.trim() || !this.password.trim() || !this.email.trim()) {
      this.errorMessage = 'All fields are required';
      return;
    }

    this.isLoading = true;
    this.errorMessage = '';

    this.authService.register(
      this.username.trim(),
      this.password.trim(),
      this.email.trim()
    ).subscribe({
      next: (response) => {
        this.router.navigate(['/login']);
      },
      error: (err) => {
        this.errorMessage = err.error?.message || 'Registration failed';
        this.isLoading = false;
      },
      complete: () => {
        this.isLoading = false;
      }
    });
  }

  goToLogin(): void {
    this.router.navigate(['/login']);
  }
}